# This workflow deploys your app to Google Cloud Run when there's a push to the main branch.
name: Deploy to Production

on:
  push:
    branches:
      - main  # Trigger only when there's a push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.PROJECT_ID }}
        service_account_key: ${{ secrets.GCR_JSON_KEY }}
        export_default_credentials: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Google Container Registry
      uses: docker/login-action@v1 
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCR_JSON_KEY }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: gcr.io/${{ secrets.PROJECT_ID }}/streamlit-app:latest

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@main
      with:
        service: streamlit-app
        image: gcr.io/${{ secrets.PROJECT_ID }}/streamlit-app:latest
        credentials: ${{ secrets.GCR_JSON_KEY }}
        region: us-central1
        allow_unauthenticated: true

    - name: Notify of Deployment
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GH_PAT }}
        script: |
          const commit_sha = context.sha;
          const url = `${{ steps.deploy.outputs.url }}`;
          github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: commit_sha,
            body: `ðŸš€ App deployed to production!\n\nAccess it here: ${url}`
          });
